# parsec Configuration - Production Example
#
# Production-ready configuration with:
# - JWT validators with JWKS
# - Filtered trust store with CEL-based authorization
# - Distributed caching for data sources
# - Unsigned tokens (replace with JWT issuer in production)

server:
  grpc_port: 9090
  http_port: 8080

trust_domain: "parsec.prod.example.com"

exchange_server:
  claims_filter:
    type: stub

# Filtered trust store for production
trust_store:
  type: filtered_store
  validators:
    # Production OIDC provider
    - name: oidc-prod
      type: jwt_validator
      issuer: "https://accounts.example.com"
      jwks_url: "https://accounts.example.com/.well-known/jwks.json"
      trust_domain: "prod.example.com"
      refresh_interval: "15m"
    
    # Service mesh mTLS certificates (if using mTLS)
    # Note: mTLS support would require additional validator implementation
    # - name: service-mesh
    #   type: mtls_validator
    #   trust_domain: "mesh.prod.example.com"
  
  # Actor-based filtering: only allow specific validators for certain actors
  # Example: service mesh actors can only use the prod OIDC validator
  filter:
    type: cel
    script: |
      actor.trust_domain == "prod.example.com" && 
      actor.claims.verified == true

# Data sources with distributed caching
data_sources:
  # User entitlements from central authorization service
  - name: user_entitlements
    type: lua
    script_file: /etc/parsec/scripts/user_entitlements.lua
    config:
      entitlements_api: "https://entitlements.internal.example.com"
      api_key: "inject-via-env-var"  # Use PARSEC_DATA_SOURCES__0__CONFIG__API_KEY
    http:
      timeout: 30s
    caching:
      type: distributed
      ttl: 5m
      group_name: "entitlements-cache"
      cache_size: 268435456  # 256 MB
  
  # Organization metadata
  - name: org_metadata
    type: lua
    script_file: /etc/parsec/scripts/org_metadata.lua
    config:
      org_api: "https://org.internal.example.com"
      api_key: "inject-via-env-var"  # Use PARSEC_DATA_SOURCES__1__CONFIG__API_KEY
    http:
      timeout: 10s
    caching:
      type: distributed
      ttl: 1h
      group_name: "org-cache"
      cache_size: 104857600  # 100 MB

# Token issuers
issuers:
  - token_type: "urn:ietf:params:oauth:token-type:txn_token"
    type: transaction_token
    issuer_url: "https://parsec.prod.example.com"
    ttl: 5m
    transaction_context:
      - type: "cel"
        expression: |
          {
            "service_id": subject.sub,
            "environment": subject.claims.env
          }
    request_context:
      - type: "cel"
        expression: "{}"
    key_manager_plugin: |
      KeyManager "disk" {
        plugin_data {
          keys_path = "/var/lib/parsec/keys"
        }
      }
